// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MottuApi.Data;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace MottuApi.net.Migrations
{
    [DbContext(typeof(MottuDbContext))]
    partial class MottuDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MottuApi.Models.Cliente", b =>
                {
                    b.Property<string>("UsuarioCliente")
                        .HasMaxLength(450)
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("MotoPlaca")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("UsuarioCliente");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("MottuApi.Models.Funcionario", b =>
                {
                    b.Property<string>("UsuarioFuncionario")
                        .HasMaxLength(450)
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("NomePatio")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("UsuarioFuncionario");

                    b.HasIndex("NomePatio");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("MottuApi.Models.Moto", b =>
                {
                    b.Property<string>("Placa")
                        .HasMaxLength(7)
                        .HasColumnType("NVARCHAR2(7)");

                    b.Property<int>("Modelo")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("NomePatio")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("Setor")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("Status")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("UsuarioFuncionario")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("Placa");

                    b.HasIndex("NomePatio");

                    b.HasIndex("UsuarioFuncionario");

                    b.ToTable("Motos");
                });

            modelBuilder.Entity("MottuApi.Models.Patio", b =>
                {
                    b.Property<string>("NomePatio")
                        .HasMaxLength(450)
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int>("VagasOcupadas")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("VagasTotais")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("NomePatio");

                    b.ToTable("Patios");
                });

            modelBuilder.Entity("MottuApi.Models.Funcionario", b =>
                {
                    b.HasOne("MottuApi.Models.Patio", "Patio")
                        .WithMany()
                        .HasForeignKey("NomePatio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patio");
                });

            modelBuilder.Entity("MottuApi.Models.Moto", b =>
                {
                    b.HasOne("MottuApi.Models.Patio", "Patio")
                        .WithMany("Motos")
                        .HasForeignKey("NomePatio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MottuApi.Models.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("UsuarioFuncionario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");

                    b.Navigation("Patio");
                });

            modelBuilder.Entity("MottuApi.Models.Patio", b =>
                {
                    b.Navigation("Motos");
                });
#pragma warning restore 612, 618
        }
    }
}
